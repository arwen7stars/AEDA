Corrida / 100 metros / 1 / 0
Corrida / 200 metros / 2 / 0
Corrida / Longa Distancia / 4 / 30
Natacao / Estilo Livre 50m / 2 / 0
Futebol / Semi-Finais / 2 / 15
Natacao / Mariposa 100m / 3 / 15
Futebol / Finais / 2 / 15

#include <vector>
#include <iostream>
#include <fstream>
#include "Lists.h"
#include "Desporto.h"
#include "Data.h"
#include "Campeonato.h"

bool load(Campeonato c)
{
	bool suc_des;
	string desportos = "C:\\Users\\Cláudia Marinho\\Desktop\\Projeto-Aeda\\src\\Desportos.txt";
	suc_des = c.criaDesportosCampeonato(desportos);

	if(suc_des)
		return true;
	else return false;

	string modalidades = "C:\\Users\\Cláudia Marinho\\Desktop\\Projeto-Aeda\\src\\Modalidades.txt";
	ifstream in_mod;
	char barra;
	string desp = "";
	string mod = "";
	int horas;
	int minutos;
	vector<Desporto*> d = c.getDesportos();

	in_mod.open(modalidades.c_str());

	while (!in_mod.eof())
	{
		int indice = -1;

		string extraido = "";

		if (!in_mod.eof())
			do
			{
				in_mod >> extraido;
				if (extraido != "/")
					desp = desp + extraido;
			} while (extraido != "/");

		for (unsigned int i = 0; i < d.size(); i++)
			if (d[i]->getNome() == desp)
				indice = i;

		if (indice == -1)
			return false;

		extraido = "";

		if (!in_mod.eof())
			do
			{
				in_mod >> extraido;
				if (extraido != "/")
					mod = mod + extraido;
			} while (extraido != "/");

		in_mod >> horas;
		in_mod >> barra;
		in_mod >> minutos;
		if (!in_mod.eof())
		{
			Modalidade * m = new Modalidade(mod, horas, minutos, d[indice]);
			d[indice]->adicionaModalidade(m);
		}
	}

	return true;

}